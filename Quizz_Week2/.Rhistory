plot(x=cars$speed, y=cars$dist, xlab="Speed", ylab="Stoppong Distance")
plot(x=cars$speed, y=cars$dist,  ylab="Stoppong Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab= "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, main=My Plot")
plot(x = cars$speed, y = cars$dist, main="My Plot")
plot(cars, main="My Plot")
plot(cars, sub="My Plot Subtitle")
plot(cars, col=2)
plot(cars, xlim=c(10,15))
plot(cars, pch=2)
load(mtcars)
data(mtcars)
?boxplot
boxplot(mpg~cyl, mtcars)
hist(mtcars$mpg)
quit()
best("NY", "PP")
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
best("NY", "PP")
ncol(outcome_data)
rm(list=ls())
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
best("TX","hola")
best("TX","heart attack")
best("TX","heart attack ")
best("TX","heart failure")
best("TX","pneumonia")
best("TX","pneumoniaa")
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
best("TX","pneumoniaa")
best("TX","pneumonia")
outcome_data<- read.csv("C:/Data_Science/RProgramming/ProgrammingAssignment3/ProgAssignment3-data/outcome-of-care-measures.csv")
str(outcome_data)
outcome_data[,7]
v_states <- !is.na(outcome_data[,7])
list_of_states <- outcome_data[v_states,]
list_of_states
v_states <- !is.na(outcome_data[,"State"])
v_states
v_states <- !is.na(outcome_data[,state])
v_states <- !is.na(outcome_data[,State])
v_states <- !is.na(outcome_data[,7])
list_of_states <- outcome_data[v_states,]
list_of_states
View(list_of_states)
list_of_states <- outcome_data[v_states,7]
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
best("TX","pneumonia")
best("MV","pneumoniaa")
best("MV","pneumonia")
best("IL","pneumonia")
best("IL","pneumaonia")
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
v_rate <- !is.na(outcome_data[,11])
good_outcome_data <- outcome_data[v_rate,]
View(good_outcome_data)
v_rate <- !is.nan(outcome_data[,11])
outcome_data <- as.numeric(,outcome)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
outcome_data[, outcome] <- as.numeric(outcome_data[,outcome])
outcome_data[, 11] <- as.numeric(outcome_data[,11])
v_rate <- !is.na(outcome_data[,11])
good_outcome_data <- outcome_data[v_rate,]
View(good_outcome_data)
View(outcome_data)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
outcome_data[, 11] <- as.numeric(outcome_data[,11])
v_rate <- !is.nan(outcome_data[,11])
good_outcome_data <- outcome_data[v_rate,]
View(good_outcome_data)
quit()
outcome_data<- read.csv("C:/Data_Science/RProgramming/ProgrammingAssignment3/ProgAssignment3-data/outcome-of-care-measures.csv")
nrow(outcome_data)
outcome_data[,c(1,7)]
outcome_data[,c("State")]
outcome_data[,c("Provider.number","State")]
outcome_data[,c("Provider.Number","State")]
outcome_data
head(outcome_data, 6)
head(outcome_data[,7], 6)
head(outcome_data[,c(1,7)], 6)
head(outcome_data[,c(1,7,11)], 6)
is.na(outcome_data[6,11])
(outcome_data[6,11])
x<-as.numeric(outcome_data[,11])
x
head(x,6)
x<-(outcome_data[,11])
head(x,6)
is.numeric(x[1])
x[1]
x<- as.numeric(x)
x
head(x,6)
x[1]
x<-(outcome_data[,11])
head(x,6)
x[1]
x[3]
x[4]
x[15]
x[1]
x[1]<-as.numeric(x[1])
x[1]
f<-factor(1:5)
f
factor(5:10)
as.numeric(factor(5:10))
x<-(outcome_data[,11])
rm(x)
x<-(outcome_data[,11])
y <- c("1", "2", "3", "Cuatro")
w<- as.numeric(y)
y
w
outcome_data<- read.csv("C:/Data_Science/RProgramming/ProgrammingAssignment3/ProgAssignment3-data/outcome-of-care-measures.csv",stringsAsFactors=FALSE)
View(outcome_data)
x<- outcome_data[,11]
head(x,6)
y<- as.numeric(x)
head(y,6)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
outcome_data<- read.csv("C:/Data_Science/RProgramming/ProgrammingAssignment3/ProgAssignment3-data/outcome-of-care-measures.csv",stringsAsFactors=FALSE)
outcome_data<- read.csv("C:/Data_Science/RProgramming/ProgrammingAssignment3/ProgAssignment3-data/outcome-of-care-measures.csv",stringsAsFactors=FALSE)
outcome_data[, 11] <- as.numeric(outcome_data[,11])
View(outcome_data)
v_rate <- !is.na(outcome_data[,11])
good_outcome_data <- outcome_data[v_rate,]
View(good_outcome_data)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
min(good_outcome_data[,11])
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
best("TX","heart attack")
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
best("TX","heart attack")
best("TX","heart failure")
best("TX","pneumonia")
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
best("TX","pneumonia")
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
best("TX","pneumonia")
best("TX","heart failure")
best("TX","heart attack")
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
best("TX","heart attack")
best("IL","heart attack")
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
best("IL","heart attack")
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
View(good_outcome_data)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
View(good_outcome_data)
bueno<- subset(good_outcome_data, State="AL" & "Hospital 30-Day Death (Mortality) Rates from Heart Attack" = 18.1)
bueno<- subset(good_outcome_data, State="AL" & "Hospital 30-Day Death (Mortality) Rates from Heart Attack" ==18.1)
View(bueno)
bueno<- subset(good_outcome_data, State=="AL" & "Hospital 30-Day Death (Mortality) Rates from Heart Attack" == 18.1)
View(bueno)
bueno<- subset(outcome_data, State=="AL" & "Hospital 30-Day Death (Mortality) Rates from Heart Attack" == 18.1)
View(bueno)
bueno<- subset(outcome_data, State=="AL" && "Hospital 30-Day Death (Mortality) Rates from Heart Attack" == 18.1)
View(bueno)
bueno<- subset(outcome_data, State=="AL")
bueno<- subset(outcome_data, State=="AL" & "Hospital 30-Day Death (Mortality) Rates from Heart Attack" < 19)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
best("TX", "pneumonia")
best("IL", "pneumonia")
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
best("IL", "pneumonia")
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
best("IL", "pneumonia")
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
best("IL", "pneumonia")
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
best("IL", "pneumonia")
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
best("IL", "pneumonia")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
best("MD", "pneumonia")
best("MD", "heart attack")
w<- c("Diego", "Andres", "Caggiano")
w2<- sort(w)
w2
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
best("MD", "pneumonia")
best("MD", "heart attack")
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
best("MD", "heart attack")
best("IL", "pneumonia")
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
quit()
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
x<-list("Diego", "Andres", "Caggiano")
y<- sort(x)
x<-c("Diego", "Andres", "Caggiano")
y<- sort(x)
y
w<- c(10,30,20,60,3)
w2<- sort(w)
w2
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
best("MD", "heart attack")
best("MX", "heart attack")
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart attack", 3)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart attack", 3)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart attack", 3)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart attack", 3)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart attack", 3)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart attack", 3)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart attack", 3)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart attack", 3)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart attack", 3)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart attack", 3)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart attack", 3)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart attack", 3)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart attack", 3)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart attack", 3)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart attack", 3)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart attack", 3)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart attack", 3)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart attack", 3)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart attack", 3)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart attack", 3)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
rankhospital("MN", "heart attack", "best")
rankhospital("TX", "heart failure", 4)
rankhospital("TX", "heart failure", 5)
rankhospital("TX", "heart failure", 6)
rankhospital("TX", "heart failure", 1)
rankhospital("TX", "heart failure", "best")
rankhospital("TX", "heart failure", 1)
rankhospital("TX", "heart failure", best)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart failure", best)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart failure", "best")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
rankhospital("TX", "heart failure", "best")
rankhospital("TX", "heart failure", 1)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
quit()
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankall.R')
z<- c(10,20,30,40,50)
for (j in z) print(z[j])
z<- [10,20,30,40,50]
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankall.R')
rankall("heart attack", 1)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankall.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankall.R')
rankall("heart attack", 1)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankall.R')
rankall("heart attack", 1)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankall.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankall.R')
rankall("heart attack", 1)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankall.R')
result <- data.frame(hospital=Character(), state=character())
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankall.R')
result <- data.frame(hospital=character(), state=character())
result
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankall.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankall.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankall.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankall.R')
rankall("heart attack", 1)
rankall("heart failure", "worst")
rankall("heart failure", "best")
rankall("heart failure", 2)
rankall("heart failure", 1)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankall.R')
rankall("heart failure", "best")
rankall("heart failure", "worst")
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankall.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankall.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankall.R')
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/best.R')
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankhospital.R')
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
source('C:/Data_Science/RProgramming/ProgrammingAssignment3/rankall.R')
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
quit()
library("swirl")
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf<- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageversion("dplyr")
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select (cran, r:arch:country)
select (cran, r_arch:country)
select (cran, country:r_arch)
cran
select (cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package=="swirl")
filter(cran, r_version=="3.1.1", country=="US")
?Comparison
filter(cran, r_version<="3.0.2", country=="IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size>100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2<- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrage(cran2, country, desc(r_version), ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3<- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size/2^20)
mutate(cran3, size_mb = size/2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size=size+1000)
summarize(cran, avg_bytes=mean(size))
library(dplyr)
cran<- tdl_df(mydf)
cran<- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package<- group_by(cran, package)package
by_package<- group_by(cran, package)
by_package
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts<-filter(pack_sum, count>679)
top_counts
View(top_counts)
top_counts_sorted<- arrange(top_counts, desc(count)
)
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique<- filter(pack_sum, unique>465)
View(top_unique)
top_unique_sorted<- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
quit()
setwd("C:\\Data_Science\\Getting and Cleaning Data\\Quizz_Week2")
dir()
ls()
rm(list=ls())
ls()
clear
cls
library(httr)
library(diego)
oauth_endpoints("github")
myapp <- oauth_app("github",
  key = "22296c3855cb02530cb0",
  secret = "8bc77b504882762d52ff227c94fe1e06f8499096")
myapp <- oauth_app("github", key = "22296c3855cb02530cb0", secret = "8bc77b504882762d52ff227c94fe1e06f8499096")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.package("httpuv")
install.packages("httpuv")
oauth_endpoints("github")
myapp <- oauth_app("github", key = "22296c3855cb02530cb0", secret = "8bc77b504882762d52ff227c94fe1e06f8499096")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
df<-content(req)
View(df)
df
json1<-content(req)
json2<-jsonlite::fromJSON(toJSON(json1))
json2<-jsonlite::fromJSON(json1)
json2<-jsonlite::fromJSON(toJSON(json1))
json2<-toJSON(json1)
dim(df)
df
df[15]
df[15,1]
df[[15][1]]
l<- df[15]
l(1)
l[1]
acs<-read.csv("survey.csv")
dim(acs)
sqldf("select pwgtp1 from acs where AGEP < 50")
install.packages("sqldf")
sqldf("select pwgtp1 from acs where AGEP < 50")
library(sqldf)
sqldf("select pwgtp1 from acs where AGEP < 50")
library(XML)
con=url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlcode=readlines(con)
htmlcode<- readlines(con)
htmlcode<- readLines(con)
html
htmlcode
hmtlcode[10]
htmlcode[10]
lista<- xpathSApply(htmlcode, 10:100 by 10, nchar)
lista<- xpathSApply(htmlcode, 10:100, nchar)
nchar(htmlcode[10])
nchar(htmlcode[20])
nchar(htmlcode[30])
nchar(htmlcode[100])
library(readr)
x<- x <- read_fwf(file="wksst8110.for", skip=4, fwf_widths(c(12, 7, 4, 9, 4, 9, 4, 9, 4)))
x <- read_fwf(file="wksst8110.for", skip=4, fwf_widths(c(12, 7, 4, 9, 4, 9, 4, 9, 4)))
x
head(x)
sum(x$X4)
quit()
